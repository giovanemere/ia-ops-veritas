version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: veritas-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: veritas_db
      POSTGRES_USER: veritas_user
      POSTGRES_PASSWORD: veritas_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - veritas-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U veritas_user -d veritas_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: veritas-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - veritas-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO Object Storage
  minio:
    image: quay.io/minio/minio
    container_name: veritas-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9898:9000"
      - "9899:9001"
    volumes:
      - minio_data:/data
    networks:
      - veritas-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API Gateway
  backend-api:
    build:
      context: ../api
      dockerfile: Dockerfile.backend-api
    container_name: veritas-backend-api
    restart: unless-stopped
    ports:
      - "8880:8880"
    environment:
      DATABASE_URL: postgresql://veritas_user:veritas_pass@postgres:5432/veritas_db
      REDIS_URL: redis://redis:6379/0
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - veritas-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8880/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: veritas-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:8880
      REACT_APP_PORTAL_URL: http://localhost:8876
    depends_on:
      - backend-api
    networks:
      - veritas-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  veritas-network:
    driver: bridge
